	//===== The car =====
	// Border of car
	Car car;
	int x_point = -8, r = 6;
	car.x_point = x_point;
	car.y_point = x_point/2;
	car.r = r;
	car.add_line(car.x_point,car.y_point,-car.x_point,car.y_point);
	car.add_line(car.x_point,car.y_point,car.x_point*5/2,car.x_point*3);
	car.add_rectangle(car.x_point*5,car.x_point*3,-car.x_point*5,car.x_point*6);
	// The light of car
	Car car_light;
	car_light.add_circle(car.x_point*5/2,car.x_point*4,car.r);
	// The wheel of car
	Car car_wheel;
	car_wheel.add_elip(car.x_point*5-r,car.x_point*6,car.r,car.r*2);
	
	

	user_table.draw_shape(car, BLUE);
	user_table.draw_shape(car.get_symmetry_oy(), BLUE);
	user_table.draw_shape(car_light, YELLOW);
	user_table.draw_shape(car_light.get_symmetry_oy(), YELLOW);
	user_table.draw_shape(car_wheel, BLACK);
	user_table.draw_shape(car_wheel.get_symmetry_oy(), BLACK);
	
	

//===== ShapeList.h =====
class Car : public Shape{
public:
	int x_point;
	int y_point;
	int r;
	
	Car(){
		
	}
	Car(int x_point, int y_point, int r)
	{
		this->x_point = x_point;
		this->y_point = y_point;
		this->r = r;
	}
	void run_forward(){
		//Shape::run_forward();
		int d=1;
		this->x_point = this->x_point + d;
		this->y_point = this->x_point/2;
		this->r = this->r + d;
		this->point_list.clear();
		this->add_line(x_point,y_point,-x_point,y_point);
		this->add_line(x_point,y_point,x_point*5/2,x_point*3);
		this->add_rectangle(x_point*5,x_point*3,-x_point*5,x_point*6);
		this->add_circle(x_point*5/2,x_point*4,r);
		this->add_elip(x_point*5-r,x_point*6,r,r*2);
	}
};