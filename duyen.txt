//===== The car =====
	int xCar_ct = 0, yCar_ct = -16;
	
	
	//draw shape of car w gray_color
	Car gray_shapeOfCar;
	gray_shapeOfCar.add_line(xCar_ct, yCar_ct+6,xCar_ct-6,yCar_ct+6);
	gray_shapeOfCar.add_line(xCar_ct-6, yCar_ct+6,xCar_ct-12,yCar_ct-6);
	gray_shapeOfCar.add_line(xCar_ct-12, yCar_ct-6,xCar_ct-12,yCar_ct-8);
	gray_shapeOfCar.add_line(xCar_ct-12, yCar_ct-8,xCar_ct-4,yCar_ct-8);
	gray_shapeOfCar.add_line(xCar_ct-8, yCar_ct-4,xCar_ct-6,yCar_ct-6);
	gray_shapeOfCar.add_line(xCar_ct-6,yCar_ct-6,xCar_ct,yCar_ct-6);
	//draw shape of car w black_color
	Car black_shapeOfCar;
	black_shapeOfCar.add_trapezoid(xCar_ct-4, yCar_ct+4,xCar_ct-6,yCar_ct+1);
	black_shapeOfCar.add_line(xCar_ct-10, yCar_ct-11,-xCar_ct+10,yCar_ct-11);
	black_shapeOfCar.add_elip(xCar_ct-11, yCar_ct-11, xCar_ct-10-(xCar_ct-11), yCar_ct-8-(yCar_ct-11));
	//draw shape of car w cyan_color
	Car cyan_shapeOfCar;
	cyan_shapeOfCar.add_line(xCar_ct-8-xCar_ct/2, yCar_ct+1,xCar_ct-10,yCar_ct+1);
	cyan_shapeOfCar.add_line(xCar_ct-10,yCar_ct+1,xCar_ct-11,yCar_ct);
	cyan_shapeOfCar.add_line(xCar_ct-11,yCar_ct,xCar_ct-11,yCar_ct+1);
	cyan_shapeOfCar.add_line(xCar_ct-11,yCar_ct+1,xCar_ct-8-xCar_ct*3/4,yCar_ct+1);
	//draw shape of car w red_color
	Car red_shapeOfCar;
	red_shapeOfCar.add_elip(xCar_ct-7, yCar_ct-2, (yCar_ct-2 - (yCar_ct-4))*2, yCar_ct-2 - (yCar_ct-4) - 1);
	//draw shape of car w blue_color
	Car blue_shapeOfCar;
	blue_shapeOfCar.add_line(xCar_ct, yCar_ct+1, xCar_ct+3, yCar_ct+3);
	blue_shapeOfCar.add_line(xCar_ct-2, yCar_ct-4, -xCar_ct+2, yCar_ct-4);
	blue_shapeOfCar.add_rectangle(xCar_ct-4, yCar_ct-7, xCar_ct+4, yCar_ct-9);
	//up_size
	int car_size = 19;
	xCar_ct = xCar_ct + 9 + car_size*3/2;
	yCar_ct = yCar_ct + 6 + car_size;
	
	user_table.draw_shape(gray_shapeOfCar, DARKGRAY);
	user_table.draw_shape(gray_shapeOfCar.get_symmetry_oy(), DARKGRAY);
	user_table.draw_shape(black_shapeOfCar, BLACK);
	user_table.draw_shape(black_shapeOfCar.get_symmetry_oy(), BLACK);
	user_table.draw_shape(cyan_shapeOfCar, CYAN);
	user_table.draw_shape(cyan_shapeOfCar.get_symmetry_oy(), CYAN);
	user_table.draw_shape(red_shapeOfCar, RED);
	user_table.draw_shape(red_shapeOfCar.get_symmetry_oy(), RED);
	user_table.draw_shape(blue_shapeOfCar, BLUE);


//shape.h -- ve hinh thang
void add_trapezoid(int x1, int y1, int x2, int y2)
	{
		this->add_line(x1,y1,0,y1);
		this->add_line(x2,y2,0,y2);
		this->add_line(x1,y1,x2,y2);
		this->get_symmetry_oy();
	}



//ShapeList.h
class Car : public Shape{
private:
	int car_size;
	
	
public:
	int xCar_ct;
	int yCar_ct;
	int half_len_car;
	
	Car(){
		
	}
	Car(int xCar_ct, int yCar_ct)
	{
		this->xCar_ct = xCar_ct;
		this->yCar_ct = yCar_ct;
	}
	void run_forward(){
		if(car_size == 7)
			return;
		this->car_size++;
		this->half_len_car = 9 + 3*car_size/2;
		xCar_ct = xCar_ct + 9 + car_size*3/2;
		yCar_ct = yCar_ct + 6 + car_size;
		this->point_list.clear();
	}
};